#+title: Scratch Wiki

* Layout
这里仿照 =Flutter= 的风格，写了几个布局类组件，主要目的是少写 =CSS= ，省得我还要命名

** DONE 弹性布局
弹性布局有两个方向，横向的 =Row= 和竖向的 =Column= ，另外还有填充空间的组件 =Expanded=
=Row/Column= 都有其各自的 =main-axis= 和 =cross-axis= 属性，也就是 =css= 中的 =justify-content= 和 =align-items=
#+begin_src html
  <Row main-axis="center">
    <!-- put your elements here -->
    <p> Hello World </p>
    <p> Fuck You </p>
    <p> Holy Shit </p>

    <Expanded>
      <p> this is expanded</p>
    </Expanded>
  </Row>
#+end_src

*注意*
1. 弹性，要在 *定长* 的容器中才能体现
2. 因为 =block= 元素会根据内容来调整大小，这个情况在 =网格布局中= 设置 =align-content= 属性时尤其能够体现
3. =Expanded= 容器有属性 =flex= 默认为 =1=
4. =flex=  为其他正数时，所有的Expanded按照其 =flex= 的比例来分割主轴的全部空闲空间
5. 需要用 =Expanded= 容器包装才能体现

** TODO 层叠布局

** DONE 限制容器
限制容器指的是指定一定高度或比例的容器
*** SizedBox
#+begin_src html
  <SizedBox :width="100" :height="100">
    ...
  </SizedBox>
#+end_src

只需要提供数字即可，若没有数字，默认高度为父元素的 =100%=
*** Fractional
#+begin_src html
  <Fractional :width="0.5" height="0.5">
    ...
  </Fractional>
#+end_src
组件没有提供百分比数字的支持，比例默认为 =1=
** DONE 网格布局
[[file:./docs/Grid.org][Grid doc]]

* Component
** Dialog
*** 插槽
- =#default=
- =#footer=

*** 属性
- =title=
*** 示例  
#+begin_src html
  <button @click="show = true"> Click me </button>

  <Dialog v-model="show" title="Tips">
    <span> This is a message </span>
    <template #footer>
      <span class="footer">
        <button @click="show = false">Cancel</button>
        <button @click="show = false">Confirm</button>
      </span>
    </template>
  </Dialog>

#+end_src

#+begin_src typescript
  const show = ref(false)
#+end_src

当然也可以自定义 *view*
#+begin_src html
  <button @click="dialogTableVisible = true"> open a table nested Dialog </button>
  <Dialog v-model="dialogTableVisible" title="Shipping address">
    <table>
      <tr>
        <td>1</td>
        <td>2</td>
        <td>3</td>
      </tr>
    </table>
  </Dialog>

#+end_src

#+begin_src typescript
  const dialogTableVisible = ref(false)
#+end_src

** Drawer
*** 插槽
- 默认插槽 =#default=
- =#footer=
*** 属性
- =direction=
  取值在
  #+begin_src typescript
    type Direction = "top-bottom" | "bottom-top" | "left-right" | "right-left"
  #+end_src

- =title=
  =String= 类型

*** 示例
#+begin_src html
  <button @click="drawerFooterVisible = true">with Footer</button>

  <Drawer v-model="drawerFooterVisible" direction="left-right" title="This is Title">
    <template #default>
      <table>
        <template v-for="i in [1, 2, 3, 4]" :key="i">
          <tr>
            <td>1</td>
            <td>2</td>
            <td>3</td>
          </tr>
        </template>
      </table>
    </template>

    <template #footer>
      <div style="flex: auto">
        <button @click="drawerFooterVisible = false">cancel</button>
        <button @click="drawerFooterVisible = false">confirm</button>
      </div>
    </template>
  </Drawer>

#+end_src

#+begin_src typescript
  const drawerFooterVisible = ref(false)
#+end_src

** Tabbar
*** 插槽
- 默认插槽 =#default=
*** 属性
- =active-name=
  =String= 类型
*** 子组件
**** 插槽
- 默认插槽 =#default=
**** 属性
- =name=
  =String= 类型
*** 示例
#+begin_src html
  <Tabbar active-name="主页">
    <TabbarItem name="主页">
      <ShoppingView/>
    </TabbarItem>
  </Tabbar>
#+end_src