#+title: Scratch Wiki

* Layout
这里仿照 =Flutter= 的风格，写了几个布局类组件，主要目的是少写 =CSS= ，省得我还要命名

** DONE 弹性布局
弹性布局有两个方向，横向的 =Row= 和竖向的 =Column= ，另外还有填充空间的组件 =Expanded=
=Row/Column= 都有其各自的 =main-axis= 和 =cross-axis= 属性，也就是 =css= 中的 =justify-content= 和 =align-items=
#+begin_src html
  <Row main-axis="center">
    <!-- put your elements here -->
    <p> Hello World </p>
    <p> Fuck You </p>
    <p> Holy Shit </p>

    <Expanded>
      <p> this is expanded</p>
    </Expanded>
  </Row>
#+end_src

*注意*
1. 弹性，要在 *定长* 的容器中才能体现
2. 因为 =block= 元素会根据内容来调整大小，这个情况在 =网格布局中= 设置 =align-content= 属性时尤其能够体现
3. =Expanded= 容器有属性 =flex= 默认为 =1=
4. =flex=  为其他正数时，所有的Expanded按照其 =flex= 的比例来分割主轴的全部空闲空间
5. 需要用 =Expanded= 容器包装才能体现

** TODO 层叠布局

** DONE 限制容器
限制容器指的是指定一定高度或比例的容器
*** SizedBox
#+begin_src html
  <SizedBox :width="100" :height="100">
    ...
  </SizedBox>
#+end_src

只需要提供数字即可，若没有数字，默认高度为父元素的 =100%=
*** Fractional
#+begin_src html
  <Fractional :width="0.5" height="0.5">
    ...
  </Fractional>
#+end_src
组件没有提供百分比数字的支持，比例默认为 =1=
** DONE 网格布局
[[file:./docs/Grid.org][Grid doc]]

* Component
** Dialog
*** 使用
=Dialog= 分为 *入口* 和 *内容* 两部分
#+begin_src html
  <Dialog text="click me"
          v-model:show="show"
          @cancel="onCancel"
          @submit="onSubmit">
    <template v-slot:content>
      <h1> Hello World </h1>
      <h1> Hello World </h1>
      <h1> Hello World </h1>
      <h1> Hello World </h1>
      <h1> Hello World </h1>
      <h1> Hello World </h1>
      <h1> Hello World </h1>
      <h1> Hello World </h1>
      <h1> Hello World </h1>
      <h1> Hello World </h1>
    </template>
  </Dialog>
#+end_src

#+DOWNLOADED: screenshot @ 2022-03-24 08:01:40
[[file:./docs/images/2022-03-24_08-01-40_screenshot.png]]

*** 接口
- =@cancel= 点击 =Cancel= 按钮后的事件
- =@submit= 点击 =Submit= 按钮后的事件
*** 插槽
- =template v-slot:content= 对话框内容
*** 注意
对话框的大小暂时是固定的，因为我不会写，其中 =width: 70%=, =height: 60%=